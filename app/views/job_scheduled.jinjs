{% extends "./base.jinjs" %}
{% block title %}Scheduled Jobs{% endblock %}
{% block head %}
    {{ super() }}
    <link rel='stylesheet' type='text/css' href='/js/libs/fullcalendar/fullcalendar.css' />
    <link rel='stylesheet' type='text/css' href='/css/bandstats-scheduled.css' />
    <script type='text/javascript' src='/js/libs/jquery/jquery-ui-1.8.23.custom.min.js'></script>
    <script type='text/javascript' src='/js/libs/fullcalendar/fullcalendar.min.js'></script>
    <script type='text/javascript'>

    $(document).ready(function() {
        // get event list from server
        var scheduledEvents = {{scheduled_events}};
 
        // initialize the external events
        $('#external-events div.external-event').each(function() {
            var eventObject = {
                title: $.trim($(this).text())
            };
            
            $(this).data('eventObject', eventObject);
           
            // TODO: replace with custom event-draggable class 
            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });
            
        });
    
    
        // initialize the calendar
        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay',
            },
            allDaySlot: false,
            firstHour: 0,
            defaultView: 'agendaWeek',
            editable: true,
            droppable: true,
            drop: function(date, allDay) { 
            
                // retrieve the dropped element's stored Event Object
                var originalEventObject = $(this).data('eventObject');
                
                // we need to copy it, so that multiple events don't have a reference to the same object
                var copiedEventObject = $.extend({}, originalEventObject);
                
                // assign it the date that was reported
                copiedEventObject.start = date;
                copiedEventObject.allDay = allDay;
                
                // render the event on the calendar
                // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
                
                // is the "remove after drop" checkbox checked?
                if ($('#drop-remove').is(':checked')) {
                    // if so, remove the element from the "Draggable Events" list
                    $(this).remove();
                }
                
            },
            events: function(start, end, callback) {
                var events = [];
                for (e in scheduledEvents) {    
                    var scheduledEvent = scheduledEvents[e];
                    events.push({
                        "title": scheduledEvent.title,
                        "start": new Date(scheduledEvent.start),
                        "end": new Date(scheduledEvent.end),
                        "allDay": false,
                        "jobId": scheduledEvent.id
                    
                    });
                }
                callback(events);
            },
            eventClick: function(calEvent, jsEvent, view) {
                // TODO add modal event modification with crontab form
                console.log(calEvent);
            }
        });
        
        
    });

    </script>
{% endblock %}

{% block content %}

<div id="external-events">
    <h4>Available Jobs</h4>
{% for job in scheduled_jobs %}
    <div class="external-event"><a href="/admin/job/{{job.job_id}}/edit">{{ job.job_name }}</a> </div>
{% endfor %}
</div>

<div id="calendar"></div>

{% endblock %}
